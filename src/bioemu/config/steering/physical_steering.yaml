# Physical steering potentials configuration
# This file contains only the potential definitions
# Steering parameters (num_particles, start, end, etc.) are now CLI parameters

# Mathematical Form of Potential Loss Function:
# The potential_loss_fn implements a piecewise loss function:
#
# f(x) = {
#     0                                               if |x - target| ≤ flatbottom
#     (slope * (|x - target| - flatbottom))^order      if flatbottom < |x - target| ≤ linear_from
#     (slope * linear_from)^order + slope * (|x - target| - flatbottom - linear_from)  if |x - target| > linear_from
# }
#
# Key Properties:
# 1. Flat-bottom region: Zero loss when |x - target| ≤ flatbottom
# 2. Power law region: (slope * deviation)^order penalty for moderate deviations
# 3. Linear region: Simple linear continuation for large deviations
# 4. Continuous: Smooth transition between regions at linear_from

potentials:
  chainbreak:
    _target_: bioemu.steering.ChainBreakPotential
    # Enforces realistic Cα-Cα distances (~3.8Å) using flat-bottom loss
    # flatbottom: Flat region width around target (Å) - zero penalty within this range
    flatbottom: 0.
    # slope: Steepness of penalty outside flatbottom region
    slope: 5.
    # order: Power law exponent for penalty function (2 = quadratic)
    order: 2
    # linear_from: Distance threshold where penalty switches from power law to linear
    linear_from: 10
    # weight: Overall scaling factor for this potential
    weight: 1.0
  chainclash:
    _target_: bioemu.steering.ChainClashPotential
    # Prevents steric clashes between non-neighboring Cα atoms
    # flatbottom: Additional buffer distance (added to dist)
    flatbottom: 0.
    # dist: Minimum allowed distance between Cα atoms (Å)
    dist: 4.1
    # slope: Steepness of the penalty function
    slope: 5.
    # weight: Overall scaling factor for this potential
    weight: 1.0
